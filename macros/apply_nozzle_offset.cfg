[gcode_macro _APPLY_NOZZLE_OFFSET]
description: Determine the global nozzle offset and apply
variable_z_homing_temp: 150      # Temperature that we home the nozzle at to determine Z=0
variable_reference_position: 5.0        # A safe Z position at which we'll apply the offset change
variable_expansion_factor: 0.00045      # Amount hotend lengthens by per 1C temperature rise, within ±3%
variable_contact_compensation: 0.02     # Static Offset to compensate for Beacon contact latency                                        # 0.05 to 0.07 appears to be typical for the Plus 4
variable_hotend_temp: 250               # Target hotend temp (typically set by PRINT_START)
gcode:
    # Set our working variables.  We treat everything as floats for these calculations
    {% set z_home_temp = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].z_homing_temp)|float %}
    {% set z_home_x = printer.configfile.settings.beacon.home_xy_position[0] %}
    {% set z_home_y = printer.configfile.settings.beacon.home_xy_position[1] %}
    {% set z_speed = (printer.configfile.settings['stepper_z'].homing_speed)|float * 60 %}
    {% set z_hop = (printer.configfile.settings['beacon'].home_z_hop)|float %}
    {% set reference_position = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].reference_position)|float %}
    {% set expansion_factor = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].expansion_factor)|float %}
    {% set contact_comp = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].contact_compensation)|float %}
    {% set hotend_temp = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].hotend_temp)|float %}

    # Calculate Offset and sanity check it so we don't end up etching the build plate
    {% set temperature_offset = ((hotend_temp - z_home_temp) * expansion_factor)|float %}
    {% if temperature_offset < 0 %}
        {% set temperature_offset = 0|float %}
    {% endif %}

    # Determine the Z target position
    {% set target_z_offset = (contact_comp + temperature_offset)|float %}

    # Report to the console what we've determine
    RESPOND PREFIX=🛠️ MSG="Temp Based Offset: Exp. Coefficient={expansion_factor}, Temp Offset={temperature_offset}, Contact Comp.={contact_comp}, Z Offset={target_z_offset}"

    SET_GCODE_OFFSET Z={target_z_offset}                            # Clear any pre-existing Gcode offsets

[gcode_macro _FIND_Z_EQUALS_ZERO]
gcode:
    {% set z_home_temp = printer["gcode_macro _APPLY_NOZZLE_OFFSET"].z_homing_temperature|int %}
    {% set z_home_x = printer.configfile.settings.beacon.home_xy_position[0] %}
    {% set z_home_y = printer.configfile.settings.beacon.home_xy_position[1] %}

    M109 S{z_home_temp}                     # Commence nozzle warmup for z homing        
    BED_MESH_CLEAR                          # Clear out any existing bed meshing context
    SET_KINEMATIC_POSITION Z=0              # Force firmware to believe Z is homed at 0
    G1 Z3 F600                              # Move bed away from the nozzle by 3mm from where it was
    SET_KINEMATIC_POSITION CLEAR=XYZ        # Clear all kinematic repositionings
    SET_GCODE_OFFSET Z=0                    # Comnpletely reset all prior notions of Z offset
    G28 X Y                                 # Home X and Y Axes
    G28 Z METHOD=CONTACT CALIBRATE=1        # Home Z axis, and calibrate beacon                                               
    Z_TILT_ADJUST                           # Ensure bed is level
    G1 X{z_home_x} Y{z_home_y} F7200        # Move to Z home position
    G4 P30000                               # Heatsoak hotend for 30s more
    G28 Z METHOD=CONTACT CALIBRATE=1        # Establish Z=0
    G1 Z3 F600                              # Move bed away from the nozzle by 3mm from where it was

[gcode_macro APPLY_FILAMENT_OFFSET]
description: Apply a Z offset adjustment for a specific filament
gcode:
    {% set filament_z = params.Z|default(0)|float %}
    { action_respond_info("Setting Filament Offset to %.3fmm" % (filament_z)) }
    SET_GCODE_OFFSET Z_ADJUST={filament_z} MOVE=1 SPEED=3