[gcode_macro _APPLY_NOZZLE_OFFSET]
description: Determine the global nozzle offset and apply
variable_z_homing_temp: 150      # Temperature that we home the nozzle at to determine Z=0
variable_expansion_factor: 0.00045      # Amount hotend lengthens by per 1C temperature rise, within ±3%
variable_contact_compensation: 0.015     # Static Offset to compensate for Beacon contact latency
variable_hotend_temp: 250               # Target hotend temp (typically set by PRINT_START)
gcode:
    # Set our working variables.  We treat everything as floats for these calculations
    {% set z_home_temp = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].z_homing_temp)|float %}
    {% set expansion_factor = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].expansion_factor)|float %}
    {% set contact_comp = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].contact_compensation)|float %}
    {% set hotend_temp = (printer["gcode_macro _APPLY_NOZZLE_OFFSET"].hotend_temp)|float %}

    # Calculate Offset and sanity check it so we don't end up etching the build plate
    {% set temperature_offset = ((hotend_temp - z_home_temp) * expansion_factor)|float %}
    {% if temperature_offset < 0 %}
        {% set temperature_offset = 0|float %}
    {% endif %}

    # Determine the Z target position
    {% set target_z_offset = (contact_comp + temperature_offset)|float %}

    # Report to the console what we've determine
    RESPOND PREFIX=🛠️ MSG="Nozzle temp based Z offset: Exp. Coefficient={expansion_factor}, Temp Offset={temperature_offset}, Contact Comp.={contact_comp}, Z Offset={target_z_offset}"

    SET_GCODE_OFFSET Z={target_z_offset} # Apply global Z offset


[gcode_macro APPLY_FILAMENT_OFFSET]
description: Apply a Z offset adjustment for a specific filament
gcode:
    {% set filament_z = params.Z|default(0)|float %}
    { action_respond_info("Setting Filament Offset to %.3fmm" % (filament_z)) }
    SET_GCODE_OFFSET Z_ADJUST={filament_z} MOVE=1 SPEED=3